{"name":"Qbank","tagline":"A Loosely Coupled, Composition-based Silverlight Client demo","body":"QBank \r\n=============\r\nQbank is a ficticious multichannel bank operating in an imaginary country. (It is Megsoft Consulting's Contoso).\r\n\r\nRequirements\r\n--------------\r\nQBank requirements are to employ Service Oriented Archicture (SOA) to make their Banking System accessible via multiple clients (e.g.:Mobiles, Desktop & Web). \r\n\r\nQBank wanted their client application to look very appealing to the consumer, so we chose Silverlight (Yes, we did) to develop a rich UI to surpass their customer expectations.\r\n\r\nPatterns & Tecnologies\r\n--------------\r\nModel-View-View-Model (MVVM), Repository, Dependency Injection/Inversion of Control, Unit of Work, Request/Response Service Pattern, UI Composition using Prism, WCF, Unity, StructureMap, EntityFramework, Nuget,\r\n\r\n### Authors and Contributors\r\nClaudio Sanchez (@ClaudioSanchez) \r\n\r\n\r\nScreenshots\r\n-----------\r\n","google":"UA-136396-8","note":"Don't delete this file! It's used internally to help with page regeneration."}