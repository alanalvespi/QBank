//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.269
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 4.0.50826.0
// 
namespace QBank.BasicAccountModule.Proxy {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccountDto", Namespace="http://schemas.datacontract.org/2004/07/QBank.Service.Model")]
    public partial class AccountDto : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string AccountHolderField;
        
        private string AccountTypeField;
        
        private double BalanceField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountHolder {
            get {
                return this.AccountHolderField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountHolderField, value) != true)) {
                    this.AccountHolderField = value;
                    this.RaisePropertyChanged("AccountHolder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountType {
            get {
                return this.AccountTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountTypeField, value) != true)) {
                    this.AccountTypeField = value;
                    this.RaisePropertyChanged("AccountType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Balance {
            get {
                return this.BalanceField;
            }
            set {
                if ((this.BalanceField.Equals(value) != true)) {
                    this.BalanceField = value;
                    this.RaisePropertyChanged("Balance");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Proxy.IAccountService")]
    public interface IAccountService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IAccountService/CheckBalance", ReplyAction="http://tempuri.org/IAccountService/CheckBalanceResponse")]
        System.IAsyncResult BeginCheckBalance(QBank.BasicAccountModule.Proxy.CheckBalanceRequest request, System.AsyncCallback callback, object asyncState);
        
        QBank.BasicAccountModule.Proxy.CheckBalanceResponse EndCheckBalance(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IAccountService/Withdraw", ReplyAction="http://tempuri.org/IAccountService/WithdrawResponse")]
        System.IAsyncResult BeginWithdraw(QBank.BasicAccountModule.Proxy.WithdrawRequest request, System.AsyncCallback callback, object asyncState);
        
        QBank.BasicAccountModule.Proxy.WithdrawResponse EndWithdraw(System.IAsyncResult result);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckBalanceRequest", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class CheckBalanceRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string AccountNumber;
        
        public CheckBalanceRequest() {
        }
        
        public CheckBalanceRequest(string AccountNumber) {
            this.AccountNumber = AccountNumber;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckBalanceResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class CheckBalanceResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool IsError;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string ErrorMessage;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public QBank.BasicAccountModule.Proxy.AccountDto Account;
        
        public CheckBalanceResponse() {
        }
        
        public CheckBalanceResponse(bool IsError, string ErrorMessage, QBank.BasicAccountModule.Proxy.AccountDto Account) {
            this.IsError = IsError;
            this.ErrorMessage = ErrorMessage;
            this.Account = Account;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="WithdrawRequest", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class WithdrawRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string AccountNumber;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public double Amount;
        
        public WithdrawRequest() {
        }
        
        public WithdrawRequest(string AccountNumber, double Amount) {
            this.AccountNumber = AccountNumber;
            this.Amount = Amount;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="WithdrawResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class WithdrawResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool IsError;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string ErrorMessage;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public QBank.BasicAccountModule.Proxy.AccountDto Account;
        
        public WithdrawResponse() {
        }
        
        public WithdrawResponse(bool IsError, string ErrorMessage, QBank.BasicAccountModule.Proxy.AccountDto Account) {
            this.IsError = IsError;
            this.ErrorMessage = ErrorMessage;
            this.Account = Account;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAccountServiceChannel : QBank.BasicAccountModule.Proxy.IAccountService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CheckBalanceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CheckBalanceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string ErrorMessage {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        public QBank.BasicAccountModule.Proxy.AccountDto Account {
            get {
                base.RaiseExceptionIfNecessary();
                return ((QBank.BasicAccountModule.Proxy.AccountDto)(this.results[1]));
            }
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[2]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WithdrawCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public WithdrawCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string ErrorMessage {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        public QBank.BasicAccountModule.Proxy.AccountDto Account {
            get {
                base.RaiseExceptionIfNecessary();
                return ((QBank.BasicAccountModule.Proxy.AccountDto)(this.results[1]));
            }
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[2]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AccountServiceClient : System.ServiceModel.ClientBase<QBank.BasicAccountModule.Proxy.IAccountService>, QBank.BasicAccountModule.Proxy.IAccountService {
        
        private BeginOperationDelegate onBeginCheckBalanceDelegate;
        
        private EndOperationDelegate onEndCheckBalanceDelegate;
        
        private System.Threading.SendOrPostCallback onCheckBalanceCompletedDelegate;
        
        private BeginOperationDelegate onBeginWithdrawDelegate;
        
        private EndOperationDelegate onEndWithdrawDelegate;
        
        private System.Threading.SendOrPostCallback onWithdrawCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public AccountServiceClient() {
        }
        
        public AccountServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AccountServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AccountServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AccountServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<CheckBalanceCompletedEventArgs> CheckBalanceCompleted;
        
        public event System.EventHandler<WithdrawCompletedEventArgs> WithdrawCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult QBank.BasicAccountModule.Proxy.IAccountService.BeginCheckBalance(QBank.BasicAccountModule.Proxy.CheckBalanceRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCheckBalance(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginCheckBalance(string AccountNumber, System.AsyncCallback callback, object asyncState) {
            QBank.BasicAccountModule.Proxy.CheckBalanceRequest inValue = new QBank.BasicAccountModule.Proxy.CheckBalanceRequest();
            inValue.AccountNumber = AccountNumber;
            return ((QBank.BasicAccountModule.Proxy.IAccountService)(this)).BeginCheckBalance(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        QBank.BasicAccountModule.Proxy.CheckBalanceResponse QBank.BasicAccountModule.Proxy.IAccountService.EndCheckBalance(System.IAsyncResult result) {
            return base.Channel.EndCheckBalance(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private bool EndCheckBalance(System.IAsyncResult result, out string ErrorMessage, out QBank.BasicAccountModule.Proxy.AccountDto Account) {
            QBank.BasicAccountModule.Proxy.CheckBalanceResponse retVal = ((QBank.BasicAccountModule.Proxy.IAccountService)(this)).EndCheckBalance(result);
            ErrorMessage = retVal.ErrorMessage;
            Account = retVal.Account;
            return retVal.IsError;
        }
        
        private System.IAsyncResult OnBeginCheckBalance(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string AccountNumber = ((string)(inValues[0]));
            return this.BeginCheckBalance(AccountNumber, callback, asyncState);
        }
        
        private object[] OnEndCheckBalance(System.IAsyncResult result) {
            string ErrorMessage = this.GetDefaultValueForInitialization<string>();
            QBank.BasicAccountModule.Proxy.AccountDto Account = this.GetDefaultValueForInitialization<QBank.BasicAccountModule.Proxy.AccountDto>();
            bool retVal = this.EndCheckBalance(result, out ErrorMessage, out Account);
            return new object[] {
                    ErrorMessage,
                    Account,
                    retVal};
        }
        
        private void OnCheckBalanceCompleted(object state) {
            if ((this.CheckBalanceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CheckBalanceCompleted(this, new CheckBalanceCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CheckBalanceAsync(string AccountNumber) {
            this.CheckBalanceAsync(AccountNumber, null);
        }
        
        public void CheckBalanceAsync(string AccountNumber, object userState) {
            if ((this.onBeginCheckBalanceDelegate == null)) {
                this.onBeginCheckBalanceDelegate = new BeginOperationDelegate(this.OnBeginCheckBalance);
            }
            if ((this.onEndCheckBalanceDelegate == null)) {
                this.onEndCheckBalanceDelegate = new EndOperationDelegate(this.OnEndCheckBalance);
            }
            if ((this.onCheckBalanceCompletedDelegate == null)) {
                this.onCheckBalanceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCheckBalanceCompleted);
            }
            base.InvokeAsync(this.onBeginCheckBalanceDelegate, new object[] {
                        AccountNumber}, this.onEndCheckBalanceDelegate, this.onCheckBalanceCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult QBank.BasicAccountModule.Proxy.IAccountService.BeginWithdraw(QBank.BasicAccountModule.Proxy.WithdrawRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginWithdraw(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginWithdraw(string AccountNumber, double Amount, System.AsyncCallback callback, object asyncState) {
            QBank.BasicAccountModule.Proxy.WithdrawRequest inValue = new QBank.BasicAccountModule.Proxy.WithdrawRequest();
            inValue.AccountNumber = AccountNumber;
            inValue.Amount = Amount;
            return ((QBank.BasicAccountModule.Proxy.IAccountService)(this)).BeginWithdraw(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        QBank.BasicAccountModule.Proxy.WithdrawResponse QBank.BasicAccountModule.Proxy.IAccountService.EndWithdraw(System.IAsyncResult result) {
            return base.Channel.EndWithdraw(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private bool EndWithdraw(System.IAsyncResult result, out string ErrorMessage, out QBank.BasicAccountModule.Proxy.AccountDto Account) {
            QBank.BasicAccountModule.Proxy.WithdrawResponse retVal = ((QBank.BasicAccountModule.Proxy.IAccountService)(this)).EndWithdraw(result);
            ErrorMessage = retVal.ErrorMessage;
            Account = retVal.Account;
            return retVal.IsError;
        }
        
        private System.IAsyncResult OnBeginWithdraw(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string AccountNumber = ((string)(inValues[0]));
            double Amount = ((double)(inValues[1]));
            return this.BeginWithdraw(AccountNumber, Amount, callback, asyncState);
        }
        
        private object[] OnEndWithdraw(System.IAsyncResult result) {
            string ErrorMessage = this.GetDefaultValueForInitialization<string>();
            QBank.BasicAccountModule.Proxy.AccountDto Account = this.GetDefaultValueForInitialization<QBank.BasicAccountModule.Proxy.AccountDto>();
            bool retVal = this.EndWithdraw(result, out ErrorMessage, out Account);
            return new object[] {
                    ErrorMessage,
                    Account,
                    retVal};
        }
        
        private void OnWithdrawCompleted(object state) {
            if ((this.WithdrawCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.WithdrawCompleted(this, new WithdrawCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void WithdrawAsync(string AccountNumber, double Amount) {
            this.WithdrawAsync(AccountNumber, Amount, null);
        }
        
        public void WithdrawAsync(string AccountNumber, double Amount, object userState) {
            if ((this.onBeginWithdrawDelegate == null)) {
                this.onBeginWithdrawDelegate = new BeginOperationDelegate(this.OnBeginWithdraw);
            }
            if ((this.onEndWithdrawDelegate == null)) {
                this.onEndWithdrawDelegate = new EndOperationDelegate(this.OnEndWithdraw);
            }
            if ((this.onWithdrawCompletedDelegate == null)) {
                this.onWithdrawCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnWithdrawCompleted);
            }
            base.InvokeAsync(this.onBeginWithdrawDelegate, new object[] {
                        AccountNumber,
                        Amount}, this.onEndWithdrawDelegate, this.onWithdrawCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override QBank.BasicAccountModule.Proxy.IAccountService CreateChannel() {
            return new AccountServiceClientChannel(this);
        }
        
        private class AccountServiceClientChannel : ChannelBase<QBank.BasicAccountModule.Proxy.IAccountService>, QBank.BasicAccountModule.Proxy.IAccountService {
            
            public AccountServiceClientChannel(System.ServiceModel.ClientBase<QBank.BasicAccountModule.Proxy.IAccountService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginCheckBalance(QBank.BasicAccountModule.Proxy.CheckBalanceRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("CheckBalance", _args, callback, asyncState);
                return _result;
            }
            
            public QBank.BasicAccountModule.Proxy.CheckBalanceResponse EndCheckBalance(System.IAsyncResult result) {
                object[] _args = new object[0];
                QBank.BasicAccountModule.Proxy.CheckBalanceResponse _result = ((QBank.BasicAccountModule.Proxy.CheckBalanceResponse)(base.EndInvoke("CheckBalance", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginWithdraw(QBank.BasicAccountModule.Proxy.WithdrawRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("Withdraw", _args, callback, asyncState);
                return _result;
            }
            
            public QBank.BasicAccountModule.Proxy.WithdrawResponse EndWithdraw(System.IAsyncResult result) {
                object[] _args = new object[0];
                QBank.BasicAccountModule.Proxy.WithdrawResponse _result = ((QBank.BasicAccountModule.Proxy.WithdrawResponse)(base.EndInvoke("Withdraw", _args, result)));
                return _result;
            }
        }
    }
}
